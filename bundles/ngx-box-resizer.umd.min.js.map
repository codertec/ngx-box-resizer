{"version":3,"sources":["../../../projects/box-resizer/src/lib/box-resizer.service.ts","../../../projects/box-resizer/src/lib/box-resizer.directive.ts","../../../projects/box-resizer/src/lib/box-resizer.module.ts"],"names":["Injectable","args","providedIn","ResizerDirective","renderer","elementRef","this","reSizeInput","prototype","captureInputs","xResizer","boxReSizeInput","yResizer","xMinWidth","xMaxWidth","xDragIndicator","yMinHeight","yMaxHeight","yDragIndicator","ngOnInit","onResizeX","onResizeY","_this","childX","window","document","createElement","innerHTML","setStyle","nativeElement","appendChild","listen","event","listenerMouseMove","noSelectCssToogle","width","clientX","getBoundingClientRect","left","style","height","clientY","top","value","sheet","styleSheets","insertRule","removeRule","Directive","selector","Renderer2","ElementRef","Input","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoxResizerService {\n\n  constructor() { }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\nexport interface boxReSizeInput {\n  xResizer?: boolean;\n  xMinWidth?: number;\n  xMaxWidth?: number;\n  xDragIndicator? : any;\n\n  yResizer?: boolean;\n  yMinHeight?: number;\n  yMaxHeight?: number;\n  yDragIndicator? : any;\n}\n\n@Directive({\n  selector: \"[boxResizer]\",\n})\nexport class ResizerDirective {\n\n  @Input() boxReSizeInput: boxReSizeInput | undefined;\n  reSizeInput: boxReSizeInput = {};\n\n  listenerMouseMove: (() => void) | undefined;\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  private captureInputs() {\n    this.reSizeInput.xResizer =\n      this.boxReSizeInput && this.boxReSizeInput.yResizer\n        ? this.boxReSizeInput.yResizer\n        : true;\n    this.reSizeInput.xMinWidth =\n      this.boxReSizeInput && this.boxReSizeInput.xMinWidth\n        ? this.boxReSizeInput.xMinWidth\n        : 30;\n    this.reSizeInput.xMaxWidth =\n      this.boxReSizeInput && this.boxReSizeInput.xMaxWidth\n        ? this.boxReSizeInput.xMaxWidth\n        : 400;\n    \n    this.reSizeInput.xDragIndicator = this.boxReSizeInput && this.boxReSizeInput.xDragIndicator\n    ? this.boxReSizeInput.xDragIndicator\n    : `<div style=\"position: absolute;\n    height: 100%;\n    width: 10px;\n    background: #e7e7e7;\n    cursor: e-resize;\n    top: 0px;\n    right: 0px;\"></div>`\n\n    this.reSizeInput.yResizer =\n      this.boxReSizeInput && this.boxReSizeInput.yResizer\n        ? this.boxReSizeInput.yResizer\n        : false;\n    this.reSizeInput.yMinHeight =\n      this.boxReSizeInput && this.boxReSizeInput.yMinHeight\n        ? this.boxReSizeInput.yMinHeight\n        : 200;\n    this.reSizeInput.yMaxHeight =\n      this.boxReSizeInput && this.boxReSizeInput.yMaxHeight\n        ? this.boxReSizeInput.yMaxHeight\n        : 800;\n\n    this.reSizeInput.yDragIndicator = this.boxReSizeInput && this.boxReSizeInput.yDragIndicator\n    ? this.boxReSizeInput.yDragIndicator\n    : `<div style=\"position: absolute;\n        height: 10px;\n        width: 100%;\n        background: #e7e7e7;\n        cursor: n-resize;\n        bottom: 0px;\n        left: 0px;\"></div>`\n  }\n\n  ngOnInit() {\n    this.captureInputs();\n    if (this.reSizeInput && this.reSizeInput.xResizer) {\n      this.onResizeX();\n    }\n    if (this.reSizeInput && this.reSizeInput.yResizer) {\n      this.onResizeY();\n    }\n  }\n\n  onResizeX() {\n    const childX = window.document.createElement(\"box-resizer-drag-x\");\n    childX.innerHTML = this.reSizeInput.xDragIndicator;\n    this.renderer.setStyle(\n      this.elementRef.nativeElement,\n      \"position\",\n      \"relative\"\n    );\n    this.renderer.setStyle(this.elementRef.nativeElement, \"flex\", `initial`);\n    this.renderer.appendChild(this.elementRef.nativeElement, childX);\n    this.renderer.listen(window.document, \"mouseup\", (event: MouseEvent) => {\n      if (this.listenerMouseMove) {\n        this.listenerMouseMove();\n        this.noSelectCssToogle(false);\n      }\n    });\n\n    this.renderer.listen(childX, \"mousedown\", (event: MouseEvent) => {\n      this.noSelectCssToogle(true);\n      // this.onResizeX();\n      this.listenerMouseMove = this.renderer.listen(\n        window.document,\n        \"mousemove\",\n        (event: MouseEvent) => {\n          let width: any =\n            event.clientX -\n            this.elementRef.nativeElement.getBoundingClientRect().left;\n          if ((this.reSizeInput && this.reSizeInput.xMinWidth) && (width < this.reSizeInput.xMinWidth)) {\n            width = this.reSizeInput.xMinWidth;\n          }\n          if ((this.reSizeInput && this.reSizeInput.xMaxWidth) && (width > this.reSizeInput.xMaxWidth)) {\n            width = this.reSizeInput.xMaxWidth;\n          }\n          this.elementRef.nativeElement.style.width = width + \"px\";\n        }\n      );\n    });\n  }\n\n  onResizeY() {\n    const childX = window.document.createElement(\"box-resizer-drag-y\");\n    childX.innerHTML = this.reSizeInput && this.reSizeInput.yDragIndicator;\n    this.renderer.setStyle(\n      this.elementRef.nativeElement,\n      \"position\",\n      \"relative\"\n    );\n    this.renderer.setStyle(this.elementRef.nativeElement, \"flex\", `initial`);\n    this.renderer.appendChild(this.elementRef.nativeElement, childX);\n    this.renderer.listen(window.document, \"mouseup\", (event: MouseEvent) => {\n      if (this.listenerMouseMove) {\n        this.listenerMouseMove();\n        this.noSelectCssToogle(false);\n      }\n    });\n\n    this.renderer.listen(childX, \"mousedown\", (event: MouseEvent) => {\n      this.noSelectCssToogle(true);\n      // this.onResizeX();\n      this.listenerMouseMove = this.renderer.listen(\n        window.document,\n        \"mousemove\",\n        (event: MouseEvent) => {\n          let height =\n            event.clientY -\n            this.elementRef.nativeElement.getBoundingClientRect().top;\n          if ((this.reSizeInput && this.reSizeInput.yMinHeight) && (height < this.reSizeInput.yMinHeight)) {\n            height = this.reSizeInput.yMinHeight;\n          }\n          if ((this.reSizeInput && this.reSizeInput.yMaxHeight) && (height > this.reSizeInput.yMaxHeight)) {\n            height = this.reSizeInput.yMaxHeight;\n          }\n          this.elementRef.nativeElement.style.height = height + \"px\";\n        }\n      );\n    });\n  }\n\n\n  noSelectCssToogle(value: boolean) {\n    const sheet = window.document.styleSheets[0];\n    if (value) {\n      sheet.insertRule(\n        `body { -webkit-touch-callout: none;\n          -webkit-user-select: none;\n          -khtml-user-select: none;\n            -moz-user-select: none;\n              -ms-user-select: none;\n                  user-select: none;; }`,\n        0\n      );\n    } else {\n      sheet.removeRule(0);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizerDirective } from './box-resizer.directive';\n\n\n\n@NgModule({\n  declarations: [ResizerDirective],\n  imports: [\n  ],\n  exports: [ResizerDirective]\n})\nexport class BoxResizerModule { }\n"]}